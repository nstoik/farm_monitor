version: "3.8"

services:
    server:
        image: nstoik/farm_monitor_server:latest
        container_name: fm_server
        build:
            context: ./server
            dockerfile: Dockerfile
        ports:
            - 5554:5554/udp # presence service port
        networks:
            - farm_monitor
        volumes:
            - "logs:/logs"
        depends_on:
            - "database"

    database_management:
        image: nstoik/farm_monitor_database:latest
        container_name: fm_database_management
        build:
            context: ./database
            dockerfile: Dockerfile
        networks:
            - farm_monitor
        depends_on:
            - "database"
        restart: unless-stopped

    api:
        image: nstoik/farm_monitor_api:latest
        container_name: fm_api
        build:
            context: ./api
            dockerfile: Dockerfile
        ports:
            - 5000:5000
        networks:
            - farm_monitor
        restart: unless-stopped

    frontend:
        image: nstoik/farm_monitor_frontend:latest
        container_name: fm_frontend
        build:
            context: ./frontend
            dockerfile: Dockerfile
            # args:
        depends_on:
            - api

    # standard docker containers below

    rabbitmq:
        image: rabbitmq:3.8-management
        container_name: fm_rabbitmq
        hostname: rabbitmq
        volumes:
            #- ./.docker/rabbitmq/etc/:/etc/rabbitmq/
            - rabbitmq_data:/var/lib/rabbitmq/
            #- ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
        environment:
            RABBITMQ_DEFAULT_USER: "fm"
            RABBITMQ_DEFAULT_PASS: "farm_monitor"
            RABBITMQ_DEFAULT_VHOST: "farm_monitor"
        ports:
            - 5672:5672 # RabbitMQ port
            - 15672:15672 # Management interface
        networks:
            - farm_monitor

    flower:
        image: mher/flower:latest
        container_name: fm_flower
        volumes:
            - "flower_data:/data"
        environment:
            - CELERY_BROKER_URL=amqp://fm:farm_monitor@fm_rabbitmq/farm_monitor
        ports:
            - 5555:5555 # flower web interface
        networks:
            - farm_monitor

    database:
        image: postgres:11
        container_name: fm_database
        restart: unless-stopped
        environment:
            POSTGRES_PASSWORD: farm_monitor
            POSTGRES_USER: fm
            POSTGRES_DB: farm_monitor.db
        volumes:
            - "dbdata:/var/lib/postgresql/data"
        networks:
            - farm_monitor

    pgadmin:
        container_name: fm_pgadmin
        image: dpage/pgadmin4:5.3
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: fm@farmmonitor.ca
            PGADMIN_DEFAULT_PASSWORD: farm_monitor
        volumes:
            - pgadmin:/root/.pgadmin
            - pgadmin:/var/lib/pgadmin
        ports:
            - "5050:80"
        networks:
            - farm_monitor

volumes:
    logs:
    rabbitmq_data:
    flower_data:
    dbdata:
    pgadmin:

networks:
    farm_monitor:
        name: farm_monitor
